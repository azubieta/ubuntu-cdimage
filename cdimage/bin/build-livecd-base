#! /bin/sh
set -e

export PROJECT="${1:-livecd-base}"
export IMAGE_TYPE="${2:-$PROJECT}"

export CDIMAGE_ROOT="${CDIMAGE_ROOT:-/srv/cdimage.ubuntu.com}"
. "$CDIMAGE_ROOT/etc/config"

PATH="$CDIMAGE_ROOT/bin${PATH:+:$PATH}"

export CDIMAGE_LIVE=1

if ! lockfile -l 7200 -r 0 "$CDIMAGE_ROOT/etc/.lock-build-image-set-$PROJECT-$DIST-$IMAGE_TYPE"; then
	echo "Another image set is already building!" >&2
	exit 1
fi
trap "code=\$?; rm -f $CDIMAGE_ROOT/etc/.lock-build-image-set-$PROJECT-$DIST-$IMAGE_TYPE; exit \$code" EXIT HUP INT QUIT TERM

export CDIMAGE_DATE="$(next-build-date "$IMAGE_TYPE")"

if [ -z "$DEBUG" ]; then
	mkdir -p "$CDIMAGE_ROOT/log/$PROJECT/$DIST"
	exec >"$CDIMAGE_ROOT/log/$PROJECT/$DIST/$IMAGE_TYPE-$CDIMAGE_DATE.log" 2>&1
fi

echo "===== Downloading live filesystem images ====="
date
download-live-filesystems

if [ "$PROJECT" = "ubuntu-core" ]; then
	echo "===== Copying images to debian-cd output directory ====="
	date
	SCRATCHDIR="$CDIMAGE_ROOT/scratch/$PROJECT/$DIST/$IMAGE_TYPE"
	for arch in $ARCHES; do
		if [ -e "$SCRATCHDIR/live/$arch.rootfs.tar.gz" ]; then
			mkdir -p "$SCRATCHDIR/debian-cd/$arch"
			cp "$SCRATCHDIR/live/$arch.rootfs.tar.gz" \
				"$SCRATCHDIR/debian-cd/$arch/$DIST-core-$arch.raw"
			echo "tar archive" > "$SCRATCHDIR/debian-cd/$arch/$DIST-core-$arch.type"
			cp "$SCRATCHDIR/live/$arch.manifest" \
				"$SCRATCHDIR/debian-cd/$arch/$DIST-core-$arch.manifest"
		fi
	done
fi

if [ -z "$DEBUG" ]; then
	echo "===== Publishing ====="
	date
	if [ "$PROJECT" = "livecd-base" ]; then
		publish-livecd-base "$CDIMAGE_DATE" "$IMAGE_TYPE"
	else
		publish-daily "$CDIMAGE_DATE" "$IMAGE_TYPE"
	fi

	echo "===== Purging old images ====="
	date
	purge-old-images "$IMAGE_TYPE"

	echo "===== Triggering mirrors ====="
	date
	sync-mirrors
fi

echo "===== Finished ====="
date
